#1 upstream par service

# upstream nom-service{
# 	server nom:port;
# }

events {
}

http {

	upstream users {
    server users:8000;
	}

	upstream game {
    server game:8001;
	}

	upstream auth {
    server auth:8003;
	}

	# upstream friends {
    # server friends:8004;
	# }
	
	upstream pendu {
    server auth:8006;
	}

	include       mime.types;  # Inclut les types MIME de base fournis par Nginx

	server {
		listen 4430 ssl;
		listen  [::]:4430 ssl;
		server_name localhost;

		# Définir les types MIME
		types {
			text/html               html htm shtml;
			text/css                css;
			application/javascript  js;
			image/jpeg              jpeg jpg;
			image/png               png;
			application/json        json;
			# Ajouter d'autres types MIME si nécessaire
		}
		
		# Ajouter les en-têtes CORS
		add_header 'Access-Control-Allow-Origin' 'https://localhost:4430';
		add_header 'Access-Control-Allow-Headers' 'Content-Type';
		add_header 'Access-Control-Allow-Credentials' 'true';
		add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
		add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, X-Requested-With, Set-Cookie';
		
		ssl_certificate /etc/ssl/certs/madavid.42.fr.crt;
		ssl_certificate_key /etc/ssl/private/madavid.key;
		ssl_protocols TLSv1.2 TLSv1.3;

		# modsecurity on;
		# modsecurity_rules_file /etc/nginx/modsecurity.conf;

		location / {
			root  /usr/share/nginx/html;
			try_files $uri $uri/ /index.html;
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Headers' 'Content-Type';
			# proxy_cookie_path / "/; secure";
		}

		#important de garder "^~"
		location ^~ /api/ {
			proxy_pass http://api_gateway:8002;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Cookie $http_cookie;
			proxy_pass_header Set-Cookie;
		}
		
		location ~ /ws/game {
		proxy_pass http://game;
		proxy_ssl_verify off;
		proxy_cookie_path / '/; secure';

		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Headers' 'Content-Type';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		# proxy_set_header Origin '';

	}

location ~ /ws/pendu {
		proxy_pass http://pendu;
		proxy_ssl_verify off;
		proxy_cookie_path / '/; secure';

		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Headers' 'Content-Type';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		# proxy_set_header Origin '';

	}
		# location /api/auth{
		# 	proxy_pass http://auth;
		# 	proxy_set_header Host $host;
		# 	proxy_set_header X-Real-IP $remote_addr;
		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto $scheme;
		# 	proxy_set_header Cookie $http_cookie;
		# 	proxy_pass_header Set-Cookie;
		# }

		# location /api/users{
		# 	proxy_pass http://users;
		# 	proxy_set_header Host $host;
		# 	proxy_set_header X-Real-IP $remote_addr;
		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto $scheme;
		# 	proxy_set_header Cookie $http_cookie;
		# 	proxy_pass_header Set-Cookie;
		# }

		# location /api/game{
		# 	proxy_pass http://game:8001;
		# 	proxy_set_header Host $host;
		# 	proxy_set_header X-Real-IP $remote_addr;
		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto $scheme;
		# 	proxy_set_header Cookie $http_cookie;
		# 	proxy_pass_header Set-Cookie;
		# }

	}
}